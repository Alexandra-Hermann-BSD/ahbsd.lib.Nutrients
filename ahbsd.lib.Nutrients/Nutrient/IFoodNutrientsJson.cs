//
//  Copyright 2021  Alexandra Hermann – Beratung, Software, Design
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ahbsd.lib.Nutrients.Nutrient;
//
//    var foodNutrients = FoodNutrients.FromJson(jsonString);
using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace ahbsd.lib.Nutrients.Nutrient
{
    /// <summary>
    /// Interface for a connection between a JSON FoodNutrients file and an object
    /// </summary>
    public interface IFoodNutrientsJson
    {
        /// <summary>
        /// Gets or sets the Name of the Food.
        /// </summary>
        /// <value>The Name of the Food.</value>
        [JsonProperty("Name")]
        string Name { get; set; }
        /// <summary>
        /// Gets or sets the Version of the Food.
        /// </summary>
        /// <value>The Version of the Food.</value>
        [JsonProperty("Version")]
        ushort Version { get; set; }
        /// <summary>
        /// Gets or sets the first Date of the Food-Version.
        /// </summary>
        /// <value>The first Date of the Food-Version.</value>
        [JsonProperty("FirstDate")]
        DateTime FirstDate { get; set; }
        /// <summary>
        /// Gets or sets the default Amount of food.
        /// </summary>
        /// <value>The default Amount of food.</value>
        [JsonProperty("DefaultAmount")]
        double DefaultAmount { get; set; }
        /// <summary>
        /// Gets or sets the default Measurement of a food.
        /// </summary>
        /// <value>The default Measurement of a food.</value>
        [JsonProperty("DefaultMeasurement")]
        string DefaultMeasurement { get; set; }
        /// <summary>
        /// Gets or sets the Dictionary with the nutrients of a food.
        /// </summary>
        /// <value>The Dictionary with the nutrients of a food.</value>
        [JsonProperty("NutrientValues")]
        IDictionary<string, double?> NutrientValues { get; set; }
    }
}